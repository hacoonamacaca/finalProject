version: "3.8"

services:
  # SQL Server 資料庫
  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: goldenbowl-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=GoldenBowl123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql
      - ./Table.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - goldenbowl-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P GoldenBowl123! -Q 'SELECT 1'",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot 後端
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: goldenbowl-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:sqlserver://db:1433;databaseName=GoldenBowl;encrypt=true;trustServerCertificate=true
      - SPRING_DATASOURCE_USERNAME=sa
      - SPRING_DATASOURCE_PASSWORD=GoldenBowl123!
    depends_on:
      db:
        condition: service_healthy
    networks:
      - goldenbowl-network
    restart: unless-stopped

  # 客戶端前端 (vue-cus)
  frontend-cus:
    build:
      context: ./vue-cus
      dockerfile: ../Dockerfile.frontend
    container_name: goldenbowl-frontend-cus
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - goldenbowl-network
    restart: unless-stopped

  # 店家前端 (vue-store)
  frontend-store:
    build:
      context: ./vue-store
      dockerfile: ../Dockerfile.frontend
    container_name: goldenbowl-frontend-store
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - goldenbowl-network
    restart: unless-stopped

  # 管理後台 (vue-admin)
  frontend-admin:
    build:
      context: ./vue-admin
      dockerfile: ../Dockerfile.frontend
    container_name: goldenbowl-frontend-admin
    ports:
      - "3002:80"
    depends_on:
      - backend
    networks:
      - goldenbowl-network
    restart: unless-stopped

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: goldenbowl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend-cus
      - frontend-store
      - frontend-admin
      - backend
    networks:
      - goldenbowl-network
    restart: unless-stopped

volumes:
  db_data:

networks:
  goldenbowl-network:
    driver: bridge
